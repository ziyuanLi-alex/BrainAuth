# BrainAuth配置文件

# 随机种子设置
seed: 42

# 数据配置
data:
  data_dir: './data'
  condition: 'eyes_open'
  batch_size: 32  # 减小batch_size以适应3D CNN的内存需求
  num_workers: 1  # 增加数据加载线程数
  cache_data: true
  use_hdf5_cache: true
  hdf5_cache_dir: './data/hdf_cache'
  reset_cache: false
  pos_ratio: 0.5  # 正负样本平衡
  preprocess_params:
    l_freq: 1.0
    h_freq: 40.0  # 限制高频范围
    segment_duration: 2.0
    overlap: 0.5
    normalize: true
    channels: null  # 使用所有通道
    resample: 160.0
    preprocess_cache: true
    mapping_method: 'cubic'
    use_log: true
    freq_bands: [[8.0, 10.2], [10.2, 12.4], [12.4, 14.6], [14.6, 16.8], [16.8, 19.0], [19.0, 21.2], [21.2, 23.4], [23.4, 25.6], [25.6, 27.8], [27.8, 30.0]]  # 8-30Hz划分为10个频段

# 模型配置
model:
  name: "SiameseBrainAuth"  # 推荐使用孪生网络结构
  input_shape: [110, 100, 10]  # 与代码中默认值一致
  num_classes: 2
  pretrained: null

# 训练配置
train:
  epochs: 50  # 3D CNN需要更多epochs收敛
  learning_rate: 0.0005  # 比常规CNN更小的学习率
  weight_decay: 0.0001  # 适度的权重衰减
  lr_scheduler: "cosine"  # 余弦退火适合3D CNN
  lr_scheduler_params:
    step_size: 10
    gamma: 0.1
    patience: 5
  early_stopping: true
  early_stopping_patience: 10  # 更长的耐心
  loss_function: "bce"  # 孪生网络适合二元交叉熵

# 验证配置
evaluation:
  metrics: ["accuracy", "precision", "recall", "f1", "auc", "eer"]
  best_metric: "f1"  # F1分数对不平衡数据更鲁棒
  subject_split: 
    train: 0.7
    val: 0.15
    test: 0.15
  monitor_subject_performance: true

# 日志配置
logging:
  log_tensor_shapes: false  # 训练时关闭以减少日志量

# 结果保存
output:
  checkpoint_dir: "./outputs/checkpoints"
  log_dir: "./outputs/logs"
  results_dir: "./outputs/results"
  save_best_only: true
  save_frequency: 3